name: Release Branch PR Validation

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - ready_for_review
      - converted_to_draft
      - reopened

jobs:
  validate-release-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for branch comparison

      - name: Validate Release Branch Name
        id: validate-branch-name
        run: |
          PR_TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
          if [[ ! $PR_TARGET_BRANCH =~ ^release/ido-[0-9]{4}-[0-9]{2}$ ]]; then
            echo "Invalid release branch name format. Must match 'release/ido-YYYY-WW'"
            exit 1
          fi

      - name: Check for Unauthorized Commits from Develop
        run: |
          # Fetch develop branch
          git fetch origin develop:develop

          # Get merge base between feature branch and develop
          MERGE_BASE=$(git merge-base develop ${{ github.event.pull_request.head.sha }})

          # Get commits in the feature branch that are not in develop
          COMMITS_IN_PR=$(git rev-list $MERGE_BASE..${{ github.event.pull_request.head.sha }})

          # Check if any commits in the PR exist in develop but not in the PR branch
          UNAUTHORIZED_COMMITS=$(git rev-list develop --not ${{ github.event.pull_request.head.sha }} | grep -f <(echo "$COMMITS_IN_PR"))

          if [ ! -z "$UNAUTHORIZED_COMMITS" ]; then
            echo "Error: Detected commits from develop branch that are not part of this feature branch"
            echo "Unauthorized commits:"
            echo "$UNAUTHORIZED_COMMITS"
            exit 1
          fi
