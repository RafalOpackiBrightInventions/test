name: Release Branch Pull Request Validation
on:
  pull_request:
    types: [edited, opened, reopened, ready_for_review, synchronize]
    branches:
      - 'release/ido-*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  validate-pr-to-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Release Branch Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Validate release branch naming
          validate_release_branch_name() {
            local branch_name="$1"
            if [[ ! "$branch_name" =~ ^release/ido-[0-9]{4}-[0-9]{2}$ ]]; then
              echo "::error::Invalid release branch name. Must follow pattern 'release/ido-YYYY-WW'."
              exit 1
            fi
          }

          PR_NUMBER="${{ github.event.pull_request.number }}"
          BASE_BRANCH="${{ github.event.pull_request.base.ref }}"
          HEAD_BRANCH="${{ github.event.pull_request.head.ref }}"

          echo "Validating PR #$PR_NUMBER from $HEAD_BRANCH to $BASE_BRANCH..."

          if [[ "$BASE_BRANCH" == release/* ]]; then
            validate_release_branch_name "$BASE_BRANCH"
            
            # Fetch required branches
            git fetch origin develop "$BASE_BRANCH"
            
            # More efficient way to check for develop commits
            if git rev-list --quiet origin/"$HEAD_BRANCH" --not origin/"$BASE_BRANCH" | grep -f <(git rev-list origin/develop --not origin/"$BASE_BRANCH"); then
              echo "::error::PR contains commits from develop branch. Only hotfix commits are allowed."
              exit 1
            fi
          fi

          echo "PR validation passed successfully!"
